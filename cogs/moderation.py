from utils import *


class Moderation(commands.Cog):
	def __init__(self, bot:commands.Bot):
		self.bot = bot
		self.katcapes = []

	def check_admin(self, member:disnake.Member):
		staff = member.guild.get_role(STAFF_ID)
		if member.id == ALEX or staff in member.roles:
			return True
		return False

	@commands.slash_command(name="add-money", description="üëë –í–∏–¥–∞—Ç–∏ –≥—Ä–æ—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.", guild_ids=[GUILD_ID])
	@commands.cooldown(1, 3, commands.BucketType.user)
	async def addmoney(self, inter:disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member, –∫—ñ–ª—å–∫—ñ—Å—Ç—å:int=commands.Param(le=10000)):
		member, amount = —É—á–∞—Å–Ω–∏–∫, –∫—ñ–ª—å–∫—ñ—Å—Ç—å
		if self.check_admin(inter.author):
			#–ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
			if str(member.id) not in eco_db.full():
				return await error(inter, "**<:cross:1127281507430576219> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä—É!**")

			#–ë–î
			money = eco_db.find(f"{member.id}.money")
			eco_db.update(f"{member.id}.money", money+amount)
			await success(inter, f"**<:check:1127281505153069136> –£—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–Ω–æ {hf(amount)}{CURRENCY} –Ω–∞ –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention}!**")

	@commands.slash_command(name="remove-money", description="üëë –ü—Ä–∏–±—Ä–∞—Ç–∏ –≥—Ä–æ—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.", guild_ids=[GUILD_ID])
	@commands.cooldown(1, 3, commands.BucketType.user)
	async def removemoney(self, inter:disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member, –∫—ñ–ª—å–∫—ñ—Å—Ç—å:int=commands.Param(le=10000)):
		member, amount = —É—á–∞—Å–Ω–∏–∫, –∫—ñ–ª—å–∫—ñ—Å—Ç—å
		if self.check_admin(inter.author):
			#–ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
			if str(member.id) not in eco_db.full():
				return await error(inter, "**<:cross:1127281507430576219> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä—É!**")
			eco = eco_db.find(f"{member.id}")
			money = eco['money']
			if amount > money: amount = money

			#–ë–î
			eco_db.update(f"{member.id}.money", money-amount)
			await success(inter, f"**<:check:1127281505153069136> –£—Å–ø—ñ—à–Ω–æ –∑–Ω—è—Ç–æ {hf(amount)}{CURRENCY} –∑ –±–∞–ª–∞–Ω—Å–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention}!**")


	@commands.slash_command(name="set-level", description="üëë –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ä—ñ–≤–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.", guild_ids=[GUILD_ID])
	@commands.cooldown(1, 300, commands.BucketType.user)
	async def setlevel(
		self, inter:disnake.CommandInter,
		—É—á–∞—Å–Ω–∏–∫:disnake.Member,
		—Ä—ñ–≤–µ–Ω—å:str=commands.Param(choices=list(LEVELS)),
		–ø—ñ–¥—Ä–≤–µ–Ω—å:int=commands.Param(ge=1, le=3),
		xp:int=commands.Param(default=0)
	):
		member, type, level = —É—á–∞—Å–Ω–∏–∫, —Ä—ñ–≤–µ–Ω—å, –ø—ñ–¥—Ä–≤–µ–Ω—å
		if self.check_admin(inter.author):
			#–ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
			if str(member.id) not in level_db.full():
				return await error(inter, "**<:cross:1127281507430576219> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä—É!**")
			if LEVELS[type]['levels'] < level:
				return await error(inter, f"**<:cross:1127281507430576219> –£ —Ü—å–æ–≥–æ —Ä—ñ–≤–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ä–≤–µ–Ω—å {LEVELS[type]['levels']}!**")
			goal = get_xp_goal(member)
			if xp > goal: xp = goal
			message = ''
			if xp != 0: message = f' —Ç–∞ `{xp}` XP'

			#–ë–î
			update = level_db.find(f"{member.id}")
			update['type'] = type
			update['level'] = level
			update['xp'] = xp
			level_db.update(f"{member.id}", update)
			await success(inter, f"**<:check:1127281505153069136> –£—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ä—ñ–≤–µ–Ω—å `{LEVELS[type]['name']} {level}`{message} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {member.mention}!**")


	@commands.slash_command(name="svin", description="üëë –î–µ–ø–æ—Ä—Ç–∞—Ü—ñ—è –≤ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫.", guild_ids=[GUILD_ID])
	@commands.cooldown(3, 3600, commands.BucketType.guild)
	async def svin(self, inter:disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member):
		member = —É—á–∞—Å–Ω–∏–∫
		if self.check_admin(inter.author):
			if member.bot:
				return await error(inter, "**<:cross:1127281507430576219> –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–µ–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫ –±–æ—Ç–∞!**")
			if member.id in (1165047047653691485, 1050301564310528021):
				return await error(inter, "**<:cross:1127281507430576219> –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–µ–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")

			await success(inter, f"**<:check:1127281505153069136> –í–∏ —É—Å–ø—ñ—à–Ω–æ –¥–µ–ø–æ—Ä—Ç—É–≤–∞–ª–∏ –≤ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫ {member.mention}!**")
			self.katcapes.append(member.id)
			try:
				await zakacap(member)
			except:
				return await error(inter, "**<:cross:1127281507430576219> –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–µ–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")

	@commands.slash_command(name="desvin", description="üëë –í–∏—Ç—è–Ω—É—Ç–∏ –ª—é–¥–∏–Ω—É –∑—ñ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫–∞.", guild_ids=[GUILD_ID])
	@commands.cooldown(3, 3600, commands.BucketType.guild)
	async def desvin(self, inter:disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member):
		member = —É—á–∞—Å–Ω–∏–∫
		if self.check_admin(inter.author):
			kacaprole = inter.guild.get_role(KATCAP)
			if member.bot:
				return await error(inter, "**<:cross:1127281507430576219> –í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏—Ç—è–≥–Ω—É—Ç–∏ –∑—ñ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫–∞ –±–æ—Ç–∞!**")
			if kacaprole not in member.roles or member.id not in self.katcapes:
				return await error(inter, "**<:cross:1127281507430576219> –¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∫–∞—Ü–∞–ø!**")

			await success(inter, f"**<:check:1127281505153069136> –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏—Ç—è–≥–Ω—É–ª–∏ {member.mention} –∑—ñ —Å–≤–∏–Ω–∞—Ä–Ω–∏–∫—É!**")
			try: await member.remove_roles(kacaprole)
			except: pass
			try: await member.add_roles(member.guild.get_role(MEMBER_ROLE_ID))
			except: pass
			self.katcapes.remove(member.id)


	@commands.slash_command(name="ban", description="üëë –ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", guild_ids=[GUILD_ID])
	@commands.cooldown(3, 3600*3, commands.BucketType.guild)
	async def ban(self, inter:disnake.CommandInter, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:str, –ø—Ä–∏—á–∏–Ω–∞:str=commands.Param(max_length=100, default=None)):
		member, reason = –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –ø—Ä–∏—á–∏–Ω–∞
		if not reason: reason = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
		if not self.check_admin(inter.author): return
		#–ë–∞–Ω –ø–æ ID
		try:
			memberid = disnake.Object(id=int(member))
			mem = inter.guild.get_member(memberid.id)
			if mem:
				if inter.author.id == mem.id:
					return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —Å–µ–±–µ!**")
				if mem.bot:
					return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –±–æ—Ç–∞!**")
				if check_active(mem.id):
					return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")
			await inter.guild.ban(memberid, reason=f"{inter.author} ({inter.author.id}) - {reason}",clean_history_duration=0)
			emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á <@{memberid.id}> –±—É–≤ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", color=GREEN)
			emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
			emb.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)
			await inter.send(embed=emb)
		#–ó–≤–∏—á–∞–π–Ω–∏–π –±–∞–Ω
		except:
			member = member.replace("<@","").replace(">","").replace(" ","")
			member = inter.guild.get_member(int(member))
			if not member:
				return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**")
			if inter.author.id == member.id:
				return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —Å–µ–±–µ!**")
			if member.bot:
				return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –±–æ—Ç–∞!**")
			if check_active(member.id):
				return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")
			#–ë–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
			try:
				await member.ban(reason=f"{inter.author} ({inter.author.id}) - {reason}", clean_history_duration=0)
				emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ!", color=GREEN)
				emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
				emb.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)
				await inter.send(embed=emb)
			#–ü–æ–º–∏–ª–∫–∏
			except:
				await error(inter, "<:cross:1127281507430576219> –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**")

	@commands.slash_command(name="unban", description="üëë –†–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", guild_ids=[GUILD_ID])
	@commands.cooldown(5, 3600*3, commands.BucketType.user)
	async def unban(self, inter:disnake.CommandInter, id_–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:int=commands.Param(large=True)):
		member_id = id_–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		if not self.check_admin(inter.author): return
		#–ö–æ–º–∞–Ω–¥–∞
		try:
			memberid = disnake.Object(id=member_id)
			await inter.guild.unban(memberid, reason=f"{inter.author} ({inter.author.id})")
			emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á <@{memberid.id}> –±—É–≤ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.",color=GREEN)
			emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
			await inter.send(embed=emb)
		except:
			return await error(inter, "<:cross:1127281507430576219> –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**")


	@commands.slash_command(name="kick", description="üëë –í–∏–≥–Ω–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–µ—Ä–≤–µ—Ä—É.", guild_ids=[GUILD_ID])
	@commands.cooldown(3, 3600*3, commands.BucketType.user)
	async def kick(self, inter:disnake.CommandInter, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:disnake.Member, –ø—Ä–∏—á–∏–Ω–∞:str=commands.Param(max_length=100, default=None)):
		member, reason = –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –ø—Ä–∏—á–∏–Ω–∞
		if not reason: reason = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
		if not self.check_admin(inter.author): return
		if inter.author.id == member.id: return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–≥–Ω–∞—Ç–∏ —Å–µ–±–µ!**")
		if check_active(member.id):
			return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∏–≥–Ω–∞—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")

		#–ö—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		try:
			await member.kick(reason=f"{inter.author} ({inter.author.id}) - {reason}")
			emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ –≤–∏–≥–Ω–∞–Ω–∏–π –∑ —Å–µ—Ä–≤–µ—Ä—É.", color=GREEN)
			emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
			emb.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)
			await inter.send(embed=emb)
		#–ü–æ–º–∏–ª–∫–∏
		except:
			return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–≥–Ω–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")


	@commands.slash_command(name="mute", description="üëë –ó–∞–º'—é—Ç–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", guild_ids=[GUILD_ID])
	@commands.cooldown(3, 600, commands.BucketType.user)
	async def mute(self, inter: disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member, —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å:str, –ø—Ä–∏—á–∏–Ω–∞:str=commands.Param(default=None, max_length=100)):
		member, duration, reason = —É—á–∞—Å–Ω–∏–∫, —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å, –ø—Ä–∏—á–∏–Ω–∞
		if member.id == inter.author.id: return await error(inter, "<:cross:1127281507430576219> **–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–º—É—Ç–∏—Ç–∏ —Å–µ–±–µ**")
		if not self.check_admin(inter.author): return
		if not reason: reason = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
		if not duration.endswith("s") and not duration.endswith("m") and not duration.endswith("h") and not duration.endswith("d"):
			return await error(inter, "<:cross:1127281507430576219> **–í–∫–∞–∂—ñ—Ç—å —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ (s|m|h|d)! –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 5m**")

		#–ß–∞—Å
		dtime = convert_time(duration)
		if dtime in (-1, -2):
			return await error(inter, "<:cross:1127281507430576219> **–í–∫–∞–∂—ñ—Ç—å —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ (s|m|h|d)! –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 5m**")

		#–ú'—é—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
		try:
			await member.timeout(duration=dtime, reason=f"{inter.author} ({inter.author.id}) - {reason}")
		except:
			return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–º'—é—Ç–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞**")
		#Embed
		emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ –∑–∞–º'—é—Ç—á–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", color=GREEN)
		emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
		emb.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)
		if duration.endswith("d"): duration = f"{duration[:-1]} –¥–Ω—ñ–≤."
		elif duration.endswith("h"): duration = f"{duration[:-1]} –≥–æ–¥."
		elif duration.endswith("m"): duration = f"{duration[:-1]} —Ö–≤."
		elif duration.endswith("s"): duration = f"{duration[:-1]} —Å–µ–∫."
		emb.add_field(name="–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å", value=duration, inline=False)
		await inter.send(embed=emb)

	@commands.slash_command(name="unmute", description="üëë –†–æ–∑–º'—é—Ç–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.", guild_ids=[GUILD_ID])
	@commands.cooldown(5, 300, commands.BucketType.user)
	async def unmute(self, inter:disnake.CommandInter, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:disnake.Member):
		member = –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
		if not self.check_admin(inter.author): return
		if member.current_timeout:
			try:
				await member.timeout(duration=0)
			except:
				return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–º'—é—Ç–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!**")
			#–í—ñ–¥–ø–æ–≤—ñ–¥—å
			emb = disnake.Embed(description=f"<:check:1127281505153069136> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {member.mention} –±—É–≤ —Ä–æ–∑–º'—é—Ç—á–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ!", color=GREEN)
			emb.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
			await inter.send(embed=emb)
		else:
			return await error(inter, "<:cross:1127281507430576219> **–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞–º'—é—Ç—á–µ–Ω–∏–π!**")


	@commands.slash_command(name="clear", description="üëë –û—á–∏—Å—Ç–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.", guild_ids=[GUILD_ID])
	@commands.cooldown(2, 3600, commands.BucketType.user)
	async def clear(self, inter: disnake.CommandInter, –∫—ñ–ª—å–∫—ñ—Å—Ç—å:int, —É—á–∞—Å–Ω–∏–∫:disnake.Member=commands.Param(default=None)):
		amount, member = –∫—ñ–ª—å–∫—ñ—Å—Ç—å, —É—á–∞—Å–Ω–∏–∫
		if inter.author.id != ALEX: return
		await inter.response.defer(ephemeral=True)
		#–í—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
		if not member:
			try:
				await inter.channel.purge(limit=amount+1)
			except:
				return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!**")
			await success(inter, f"<:check:1127281505153069136> **–£—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ {amount} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å!**", ephemeral=True)
		#–£—á–∞—Å–Ω–∏–∫
		else:
			try:
				await inter.channel.purge(limit=amount, check=lambda m: m.author == member)
			except:
				return await error(inter, "<:cross:1127281507430576219> **–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!**")
			await success(inter, f"<:check:1127281505153069136> **–£—Å–ø—ñ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ {amount} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {member.mention}!**", ephemeral=True)


def setup(bot:commands.Bot):
	bot.add_cog(Moderation(bot))
from utils import *


class InviteLogger(commands.Cog):
	def __init__(self, bot:commands.Bot):
		self.bot = bot
		self.invites_list = {}


	@tasks.loop(seconds=12)
	async def checkinvite(self):
		try: self.invites_list = await self.bot.get_guild(GUILD_ID).invites()
		except: pass

	@commands.Cog.listener()
	async def on_ready(self):
		if not self.checkinvite.is_running():
			self.checkinvite.start()

	@commands.Cog.listener()
	async def on_invite_create(self, invite):
		try: self.invites_list = await self.bot.get_guild(GUILD_ID).invites()
		except: pass


	def get_code(self, invite_list:list[disnake.Invite], code:str):
		for inv in invite_list:
			if inv.code == code:
				return inv


	@commands.slash_command(name="invites", description="üìã –ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —Å–≤–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø—Ä–æ—à–µ–Ω—å.", guild_ids=[GUILD_ID])
	@commands.cooldown(1, 2, commands.BucketType.user)
	async def invites(self, inter:disnake.CommandInter, —É—á–∞—Å–Ω–∏–∫:disnake.Member=None):
		if inter.locale == disnake.Locale.ru:
			return await error(inter, "<:cross:1127281507430576219> **–ü—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–≤–∏ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞!**")
		member = —É—á–∞—Å–Ω–∏–∫
		if member == None: member = inter.author
		invdb = invites_db.full()
		member_joins, member_leaves, last, emoji = [], [], "", "<:chr_smileHz:1139909888596783195>"
		total = 0
		#–û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω–≤–∞–π—Ç—ñ–≤
		if str(member.id) in invdb:
			member_joins = list(invdb[str(member.id)]['join'])
			member_leaves = list(invdb[str(member.id)]['leave'])

		#–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è
		if len(member_joins) > 0 or len(member_leaves) > 0:
			total = len(member_joins) - len(member_leaves)
			#–û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø—Ä–æ—à–µ–Ω—ñ
			member_joins.reverse()
			index = 0
			for member_id in member_joins:
				if index > 5: break
				if member_id in member_leaves: continue
				last += f"<@{member_id}> "
				index += 1

		#–Ü–∫–æ–Ω–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω—å
		emojies = {
			70: 'ü§Ø', 50: 'üí™', 35: '<:chr_catHPizdec:1161289664582385774>üëç', 20: '<:chr_otherSigma:1130429248889421844>',
			10: '<:chr_memeLike:1207661822103265280>', 5: '<:chr_catELike:1161290345296969761>', 1: 'üëç'
		}
		for i in emojies:
			if total >= i:
				emoji = emojies[i]
				break

		#Embed
		emb = disnake.Embed(description=(
			f"**–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø—Ä–æ—à–µ–Ω—å:**\n"
			f"> ‚úÖ **{len(member_joins)}** –ø—Ä–∏—î–¥–Ω–∞–ª–∏—Å—è\n"
			f"> ‚ùå **{len(member_leaves)}** –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä\n\n"
			f"> –í–∏ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ **{total}** –ª—é–¥–µ–π! {emoji}"
		),color=EMBEDCOLOR, timestamp=inter.created_at)
		emb.set_author(name=f"@{member}", icon_url=member.display_avatar)
		emb.set_thumbnail(url=member.display_avatar)
		if total > 0: emb.add_field(name=f"–°–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞–ø—Ä–æ—à–µ–Ω–∏—Ö –ª—é–¥–µ–π:", value=f"> {last}")
		await inter.send(embed=emb)


	@commands.Cog.listener()
	async def on_member_join(self, member: disnake.Member):
		if member.guild.id != GUILD_ID: return
		invdb = invites_db.full()
		IBJ = self.invites_list
		try: self.invites_list = await member.guild.invites()
		except: pass
		if curTime() - member.created_at.timestamp() < YOUNG_TIME: return

		channel = self.bot.get_channel(INVITES_CHANNEL)
		#–ü–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å
		for invite in IBJ:
			if not invite.uses < self.get_code(self.invites_list, invite.code).uses: continue
			inviter = int(invite.inviter.id)

			#–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö
			if str(inviter) not in invdb:
				new_invite = {"join": {}, "leave": []}
			else:
				new_invite = invdb[str(inviter)]
			if str(member.id) not in new_invite['join']:
				new_invite['join'][member.id] = invite.code
			if str(member.id) in list(new_invite['join']) and str(member.id) in list(new_invite['leave']):
				new_invite['join'].pop(str(member.id))
				new_invite['leave'].remove(str(member.id))
				new_invite['join'][str(member.id)] = invite.code
			invites_db.update(f'{inviter}', new_invite)
			
			#–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
			invdb = invites_db.full()
			member_joins = list(invdb[str(inviter)]['join'])
			member_leaves = list(invdb[str(inviter)]['leave'])
			total = len(member_joins) - len(member_leaves)
			if total < 0: total = 0
			return await channel.send(f"üíö {member.mention} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è. –ô–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∏–≤ <@{inviter}>, —Ç–µ–ø–µ—Ä –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –º–∞—î **{total}** –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—å. (–ö–æ–¥ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è: `{invite.code}`)\n–í—ñ–Ω **{len(member.guild.members)}**-–∏–π —É—á–∞—Å–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä—É\n–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è: <t:{int(member.created_at.timestamp())}:R>")
		
		await channel.send(f"üíö {member.mention} –∑–∞–π—à–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ–≤—ñ–¥–æ–º–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è.\n–í—ñ–Ω **{len(member.guild.members)}**-–∏–π —É—á–∞—Å–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä—É\n–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è: <t:{int(member.created_at.timestamp())}:R>")


	@commands.Cog.listener()
	async def on_member_remove(self, member: disnake.Member):
		if member.guild.id != GUILD_ID: return
		invdb = invites_db.full()
		self.invites_list = await member.guild.invites()
		#–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö
		if curTime() - member.created_at.timestamp() < YOUNG_TIME: return
		for m in invdb:
			if str(member.id) not in list(invdb[m]['leave']) and str(member.id) in list(invdb[m]['join']):
				invdb[m]['leave'].append(str(member.id))
				invites_db.update(f"{m}", invdb[m])
				break

		#–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
		invdb = invites_db.full()
		member_joins = list(invdb[m]['join'])
		member_leaves = list(invdb[m]['leave'])
		total = len(member_joins) - len(member_leaves)
		if total < 0: total = 0

		#–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
		channel = self.bot.get_channel(INVITES_CHANNEL)
		try: inviter = f"**{member.guild.get_member(m).name}** (<@{m}>)"
		except: inviter = f"<@{m}>"
		await channel.send(f"üíî **{member.name}** ({member.mention}) –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä. –ô–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∏–≤ {inviter}, —Ç–µ–ø–µ—Ä –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –º–∞—î **{total}** –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—å.\n–ü—Ä–∏—î–¥–Ω–∞–≤—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä: <t:{int(member.joined_at.timestamp())}:R>", allowed_mentions=disnake.AllowedMentions(everyone=False, users=False, roles=False))


def setup(bot:commands.Bot):
	bot.add_cog(InviteLogger(bot))